{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkharage/Desktop/clinical-ai/src/pages/SitesDashboard.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// const SitesDashboard = ({ onBack }) => {\n//   const sites = [\n//     {\n//       name: 'Boston Medical Center',\n//       location: 'Boston, MA',\n//       enrolled: '45/50',\n//       completion: '78%',\n//       deviations: 3,\n//       dataLag: '24 hours',\n//     },\n//     {\n//       name: 'Mayo Clinic Research Center',\n//       location: 'Rochester, MN',\n//       enrolled: '48/55',\n//       completion: '82%',\n//       deviations: 2,\n//       dataLag: '24 hours',\n//     },\n//   ];\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       {/* Back Button */}\n//       <button\n//         onClick={onBack}\n//         className=\"flex items-center text-blue-600 mb-6 hover:text-blue-700\"\n//       >\n//         Back to Trial Details\n//       </button>\n\n//       {/* Page Header */}\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n\n//       {/* Sites List */}\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sites.map((site, index) => (\n//           <div\n//             key={index}\n//             className=\"bg-white shadow rounded-lg p-6 border hover:shadow-lg transition-shadow\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600\">{site.location}</p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { MapPin, Users, Activity, AlertTriangle, Clock } from 'lucide-react';\n\n// const sitesData = [\n//   {\n//     id: 1,\n//     name: 'Boston Medical Center',\n//     location: 'Boston, MA',\n//     enrolled: '45/50',\n//     completion: '78%',\n//     deviations: 3,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n//   {\n//     id: 2,\n//     name: 'Mayo Clinic Research Center',\n//     location: 'Rochester, MN',\n//     enrolled: '48/55',\n//     completion: '82%',\n//     deviations: 2,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n// ];\n\n// const SitesDashboard = () => {\n//   const navigate = useNavigate();\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sitesData.map((site) => (\n//           <div\n//             key={site.id}\n//             onClick={() => navigate(`/sites/${site.id}`)} // Navigate to dynamic route\n//             className=\"bg-white shadow rounded-lg p-6 border hover:shadow-lg transition-shadow cursor-pointer\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600\">{site.location}</p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//             <span\n//               className={`mt-4 px-3 py-1 rounded-full text-sm ${\n//                 site.status === 'Active'\n//                   ? 'bg-green-100 text-green-800'\n//                   : 'bg-yellow-100 text-yellow-800'\n//               }`}\n//             >\n//               {site.status}\n//             </span>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n//=======================================================IN USE=====================================\n\n// import React from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { ChevronLeft, MapPin } from 'lucide-react';\n\n// const sitesData = [\n//   {\n//     id: 1,\n//     name: 'Boston Medical Center',\n//     location: 'Boston, MA',\n//     enrolled: '45/50',\n//     completion: '78%',\n//     deviations: 3,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n//   {\n//     id: 2,\n//     name: 'Mayo Clinic Research Center',\n//     location: 'Rochester, MN',\n//     enrolled: '48/55',\n//     completion: '82%',\n//     deviations: 2,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n// ];\n\n// const SitesDashboard = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   // Retrieve trialId from the state passed via navigation\n//   const trialId = location.state?.trialId || 'default-trial';\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       {/* Back Button */}\n//       <button\n//         onClick={() => navigate(`/trial/${trialId}`)} // Dynamically navigate to the correct trial\n//         className=\"flex items-center text-blue-600 mb-6 hover:text-blue-700\"\n//       >\n//         <ChevronLeft className=\"w-4 h-4 mr-2\" />\n//         Back to Trial Details\n//       </button>\n\n//       {/* Page Title */}\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n\n//       {/* Active Sites List */}\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sitesData.map((site) => (\n//           <div\n//             key={site.id}\n//             onClick={() => navigate(`/sites/${site.id}`)} // Navigate to SiteDetailView\n//             className=\"bg-white shadow-lg rounded-lg p-6 hover:shadow-xl transition-shadow cursor-pointer\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600 flex items-center mt-1\">\n//               <MapPin className=\"w-4 h-4 mr-1\" />\n//               {site.location}\n//             </p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//             <span\n//               className={`mt-4 px-3 py-1 rounded-full text-sm ${\n//                 site.status === 'Active'\n//                   ? 'bg-green-100 text-green-800'\n//                   : 'bg-yellow-100 text-yellow-800'\n//               }`}\n//             >\n//               {site.status}\n//             </span>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n//=======================================================IN USE=====================================\n\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { ChevronLeft, MapPin } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sitesData = [{\n  id: 1,\n  name: 'Boston Medical Center',\n  location: 'Boston, MA',\n  enrolled: '45/50',\n  completion: '78%',\n  deviations: 3,\n  dataLag: '24 hours',\n  status: 'Active'\n}, {\n  id: 2,\n  name: 'Mayo Clinic Research Center',\n  location: 'Rochester, MN',\n  enrolled: '48/55',\n  completion: '82%',\n  deviations: 2,\n  dataLag: '24 hours',\n  status: 'Active'\n}];\nconst SitesDashboard = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Retrieve trialId from the state passed via navigation\n  const trialId = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.trialId) || 'default-trial';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 md:p-8 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`/trial/${trialId}`),\n      className: \"flex items-center text-blue-600 mb-6 hover:text-blue-700 focus:outline-none focus:ring focus:ring-blue-300\",\n      \"aria-label\": \"Back to Trial Details\",\n      children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n        className: \"w-4 h-4 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), \"Back to Trial Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl md:text-3xl font-bold mb-6\",\n      children: \"Active Sites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), sitesData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: sitesData.map(site => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => navigate(`/sites/${site.id}`),\n        className: \"bg-white shadow-lg rounded-lg p-6 hover:shadow-xl transition-shadow cursor-pointer focus:outline-none focus:ring focus:ring-blue-300\",\n        role: \"button\",\n        tabIndex: 0,\n        \"aria-label\": `View details for ${site.name}`,\n        onKeyPress: e => e.key === 'Enter' && navigate(`/sites/${site.id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: site.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 flex items-center mt-1\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), site.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 grid grid-cols-2 gap-4 text-sm md:text-base\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Enrolled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold\",\n              children: site.enrolled\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Completion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold\",\n              children: site.completion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Deviations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold\",\n              children: site.deviations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Data Entry Lag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold\",\n              children: site.dataLag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `mt-4 inline-block px-3 py-1 rounded-full text-sm ${site.status === 'Active' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n          children: site.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, site.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 text-center\",\n      children: \"No active sites available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(SitesDashboard, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SitesDashboard;\nexport default SitesDashboard;\nvar _c;\n$RefreshReg$(_c, \"SitesDashboard\");","map":{"version":3,"names":["React","useNavigate","useLocation","ChevronLeft","MapPin","jsxDEV","_jsxDEV","sitesData","id","name","location","enrolled","completion","deviations","dataLag","status","SitesDashboard","_s","_location$state","navigate","trialId","state","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","site","role","tabIndex","onKeyPress","e","key","_c","$RefreshReg$"],"sources":["/Users/shubhamkharage/Desktop/clinical-ai/src/pages/SitesDashboard.js"],"sourcesContent":["\n\n\n// import React from 'react';\n\n// const SitesDashboard = ({ onBack }) => {\n//   const sites = [\n//     {\n//       name: 'Boston Medical Center',\n//       location: 'Boston, MA',\n//       enrolled: '45/50',\n//       completion: '78%',\n//       deviations: 3,\n//       dataLag: '24 hours',\n//     },\n//     {\n//       name: 'Mayo Clinic Research Center',\n//       location: 'Rochester, MN',\n//       enrolled: '48/55',\n//       completion: '82%',\n//       deviations: 2,\n//       dataLag: '24 hours',\n//     },\n//   ];\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       {/* Back Button */}\n//       <button\n//         onClick={onBack}\n//         className=\"flex items-center text-blue-600 mb-6 hover:text-blue-700\"\n//       >\n//         Back to Trial Details\n//       </button>\n\n//       {/* Page Header */}\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n\n//       {/* Sites List */}\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sites.map((site, index) => (\n//           <div\n//             key={index}\n//             className=\"bg-white shadow rounded-lg p-6 border hover:shadow-lg transition-shadow\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600\">{site.location}</p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { MapPin, Users, Activity, AlertTriangle, Clock } from 'lucide-react';\n\n// const sitesData = [\n//   {\n//     id: 1,\n//     name: 'Boston Medical Center',\n//     location: 'Boston, MA',\n//     enrolled: '45/50',\n//     completion: '78%',\n//     deviations: 3,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n//   {\n//     id: 2,\n//     name: 'Mayo Clinic Research Center',\n//     location: 'Rochester, MN',\n//     enrolled: '48/55',\n//     completion: '82%',\n//     deviations: 2,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n// ];\n\n// const SitesDashboard = () => {\n//   const navigate = useNavigate();\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sitesData.map((site) => (\n//           <div\n//             key={site.id}\n//             onClick={() => navigate(`/sites/${site.id}`)} // Navigate to dynamic route\n//             className=\"bg-white shadow rounded-lg p-6 border hover:shadow-lg transition-shadow cursor-pointer\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600\">{site.location}</p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//             <span\n//               className={`mt-4 px-3 py-1 rounded-full text-sm ${\n//                 site.status === 'Active'\n//                   ? 'bg-green-100 text-green-800'\n//                   : 'bg-yellow-100 text-yellow-800'\n//               }`}\n//             >\n//               {site.status}\n//             </span>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n\n//=======================================================IN USE=====================================\n\n// import React from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { ChevronLeft, MapPin } from 'lucide-react';\n\n// const sitesData = [\n//   {\n//     id: 1,\n//     name: 'Boston Medical Center',\n//     location: 'Boston, MA',\n//     enrolled: '45/50',\n//     completion: '78%',\n//     deviations: 3,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n//   {\n//     id: 2,\n//     name: 'Mayo Clinic Research Center',\n//     location: 'Rochester, MN',\n//     enrolled: '48/55',\n//     completion: '82%',\n//     deviations: 2,\n//     dataLag: '24 hours',\n//     status: 'Active',\n//   },\n// ];\n\n// const SitesDashboard = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   // Retrieve trialId from the state passed via navigation\n//   const trialId = location.state?.trialId || 'default-trial';\n\n//   return (\n//     <div className=\"p-8 max-w-7xl mx-auto\">\n//       {/* Back Button */}\n//       <button\n//         onClick={() => navigate(`/trial/${trialId}`)} // Dynamically navigate to the correct trial\n//         className=\"flex items-center text-blue-600 mb-6 hover:text-blue-700\"\n//       >\n//         <ChevronLeft className=\"w-4 h-4 mr-2\" />\n//         Back to Trial Details\n//       </button>\n\n//       {/* Page Title */}\n//       <h1 className=\"text-3xl font-bold mb-6\">Active Sites</h1>\n\n//       {/* Active Sites List */}\n//       <div className=\"grid grid-cols-1 gap-6\">\n//         {sitesData.map((site) => (\n//           <div\n//             key={site.id}\n//             onClick={() => navigate(`/sites/${site.id}`)} // Navigate to SiteDetailView\n//             className=\"bg-white shadow-lg rounded-lg p-6 hover:shadow-xl transition-shadow cursor-pointer\"\n//           >\n//             <h2 className=\"text-lg font-bold\">{site.name}</h2>\n//             <p className=\"text-gray-600 flex items-center mt-1\">\n//               <MapPin className=\"w-4 h-4 mr-1\" />\n//               {site.location}\n//             </p>\n//             <div className=\"mt-4 grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Enrolled</p>\n//                 <p className=\"font-bold\">{site.enrolled}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Completion</p>\n//                 <p className=\"font-bold\">{site.completion}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Deviations</p>\n//                 <p className=\"font-bold\">{site.deviations}</p>\n//               </div>\n//               <div>\n//                 <p className=\"text-sm text-gray-600\">Data Entry Lag</p>\n//                 <p className=\"font-bold\">{site.dataLag}</p>\n//               </div>\n//             </div>\n//             <span\n//               className={`mt-4 px-3 py-1 rounded-full text-sm ${\n//                 site.status === 'Active'\n//                   ? 'bg-green-100 text-green-800'\n//                   : 'bg-yellow-100 text-yellow-800'\n//               }`}\n//             >\n//               {site.status}\n//             </span>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SitesDashboard;\n\n\n\n\n//=======================================================IN USE=====================================\n\n\n\n\n\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { ChevronLeft, MapPin } from 'lucide-react';\n\nconst sitesData = [\n  {\n    id: 1,\n    name: 'Boston Medical Center',\n    location: 'Boston, MA',\n    enrolled: '45/50',\n    completion: '78%',\n    deviations: 3,\n    dataLag: '24 hours',\n    status: 'Active',\n  },\n  {\n    id: 2,\n    name: 'Mayo Clinic Research Center',\n    location: 'Rochester, MN',\n    enrolled: '48/55',\n    completion: '82%',\n    deviations: 2,\n    dataLag: '24 hours',\n    status: 'Active',\n  },\n];\n\nconst SitesDashboard = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Retrieve trialId from the state passed via navigation\n  const trialId = location.state?.trialId || 'default-trial';\n\n  return (\n    <div className=\"p-4 md:p-8 max-w-7xl mx-auto\">\n      {/* Back Button */}\n      <button\n        onClick={() => navigate(`/trial/${trialId}`)}\n        className=\"flex items-center text-blue-600 mb-6 hover:text-blue-700 focus:outline-none focus:ring focus:ring-blue-300\"\n        aria-label=\"Back to Trial Details\"\n      >\n        <ChevronLeft className=\"w-4 h-4 mr-2\" />\n        Back to Trial Details\n      </button>\n\n      {/* Page Title */}\n      <h1 className=\"text-2xl md:text-3xl font-bold mb-6\">Active Sites</h1>\n\n      {/* Check if there are sites */}\n      {sitesData.length > 0 ? (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {sitesData.map((site) => (\n            <div\n              key={site.id}\n              onClick={() => navigate(`/sites/${site.id}`)}\n              className=\"bg-white shadow-lg rounded-lg p-6 hover:shadow-xl transition-shadow cursor-pointer focus:outline-none focus:ring focus:ring-blue-300\"\n              role=\"button\"\n              tabIndex={0}\n              aria-label={`View details for ${site.name}`}\n              onKeyPress={(e) => e.key === 'Enter' && navigate(`/sites/${site.id}`)}\n            >\n              <h2 className=\"text-lg font-bold\">{site.name}</h2>\n              <p className=\"text-gray-600 flex items-center mt-1\">\n                <MapPin className=\"w-4 h-4 mr-1\" />\n                {site.location}\n              </p>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm md:text-base\">\n                <div>\n                  <p className=\"text-gray-600\">Enrolled</p>\n                  <p className=\"font-bold\">{site.enrolled}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">Completion</p>\n                  <p className=\"font-bold\">{site.completion}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">Deviations</p>\n                  <p className=\"font-bold\">{site.deviations}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">Data Entry Lag</p>\n                  <p className=\"font-bold\">{site.dataLag}</p>\n                </div>\n              </div>\n              <span\n                className={`mt-4 inline-block px-3 py-1 rounded-full text-sm ${\n                  site.status === 'Active'\n                    ? 'bg-green-100 text-green-800'\n                    : 'bg-yellow-100 text-yellow-800'\n                }`}\n              >\n                {site.status}\n              </span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-gray-600 text-center\">No active sites available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SitesDashboard;\n"],"mappings":";;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAMA,OAAOA,KAAK,MAAM,OAAO;AACzB,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}